a <- c(1,3,5)
b <- c(2,0,-2)
a/b # 0으로 나누면 Inf
print(a-10)
print(a^2)
a<-c(1,2,NA,5,8)
mean(a) # 결측치있으면 NA로 나옴
av=mean(a, na.rm=T) # na.rm=T로 결측치 빼고
a[3] <- av
score <- c(100, 88, 99, 100, 99, 100)
score[score>=mean(score)]
score[score>=90]
score[score<=mean(score)]<--1 # true만 -1로 변경
print(score)
score<=mean(score)
# 이렇게 하면 T/F만
b <-  c(90, 80,100,100, 99)
sort(b) #오름차순
score[score==NA]
score[a==NA]
a[a==NA]
a<-c(1,2,NA,5,8)
mean(a) # 결측치있으면 NA로 나옴
av<-mean(a, na.rm=T) # na.rm=T로 결측치 빼고
a[3] <- av
a<-c(1,2,NA,5,8)
a[is.na(a)] <- av
a
a<-c(1,2,NA,5,NA)
av<-mean(a, na.rm=T) # na.rm=T로 결측치 빼고
a[is.na(a)] <- av
a
a <- list(1:3, 4:10)
a
b <- list(a=c(1:3),b=(4:10))
b
b <- list(a=c(1:3),b=(4:10))
b
b <- list(a=c(1:3),b=(4:10))
a
b
a
b <- list(a=c(1:3),b=(4:10))
a
b <- list(a=c(1:3),b=(4:10))
a
b
b[[1]]
b$a
b[1]
c<-list(1:5, c(1:3),matrix(1:12,nrow=3))
c
c[[1]][1]
c<-list(a=(1:5), c(1:3),matrix(1:12,nrow=3))
c
c[[1]][1]
c$a[3]
b[1]
b[1]
b[[1]]
c[a]
c<-list(a=(1:5), c(1:3),matrix(1:12,nrow=3))
c[a]
c[[a]]
c[['a']]
c['a']
b$a
a <- list(num<-c(1:5),score<-c(99,88,99,100,100))
a$num
a <- list(num=c(1:5),score=c(99,88,99,100,100))
a$num
a$score>=90
a$num[a$score>=90]
a$num[a$score>=90]
a <- list(num=c(1:5),score=c(99,88,99,100))
a$score>=90
a$num[a$score>=90]
a <- list(num=c(1:5),score=c(99,88,99,100,100,100))
a$score>=90
a$num[a$score>=90]
a <- list(num=c(1:5),score=c(99,88,99,100,100,100))
a$score>=90
a$num[a$score>=90]
# 필터조건이 더 적을때
a <- list(num=c(1:5),score=c(99,88,99,100))
a$score>=90
a$num[a$score>=90] #
a <- list(num=c(1:5),score=c(99,88,99))
a$score>=90
a$num[a$score>=90] # 1 3 4 5
# 필터조건이 더 적을때
a <- list(num=c(1:5),score=c(99))
a$score>=90
a$num[a$score>=90] # 1 3 4
# 필터조건이 더 적을때
a <- list(num=c(1:5),score=c(99, 88))
a$score>=90
a$num[a$score>=90] # 1 3 4
a <- list(num=c(1:5),score=c(99, 88))
a$score>=90
a$num[a$score>=90] # 1 3 5
# 필터조건이 더 적을때
a <- list(num=c(1:5),score=c(99, 88, 99))
a$score>=90 # TRUE FALSE
a$num[a$score>=90] # 1 3 5
a <- list(1,2,3)
a
a$num <- c(4:6)
a
a$num[1] <-1
a
a$num <- NULL
a
a<- NULL
a
a <- list(1:5)
b <- list(4:10)
lapply(c(a,b), min)
sapply(c(a,b), min)
a <- list(1:5, 0:5)
b <- list(4:10)
lapply(c(a,b), min)
sapply(c(a,b), min)
a <- list(1:5, list(0:5, c(-1,3,5))
b <- list(4:10)
a <- list(1:5, list(0:5, list(-1:4)))
b <- list(4:10)
lapply(c(a,b), min) # [[1]] 1 [[2]] 0 [[3]] 4
a <- list(1:5, c(0,1,2))
b <- list(4:10)
lapply(c(a,b), min) # [[1]] 1 [[2]] 0 [[3]] 4
sapply(c(a,b), min) # 1 0 4
test
test <- factor(c('sw', 'com', 'design'))
test
test <- factor(c('sw', 'com', 'design'))
test
test2 <- factor(c(1,2,3,2,5,5,1,2,3,4,5))
test2
level(test2)
levels(test2)
nlevel(test2)
nlevels(test2)
data()
str(iris)
levels(iris$Species)
str(iris)
levels(iris$Species)<- c("예쁜꽃","더예쁜꽃","아주예쁜꽃")
head(iris)
levels(iris$Species)
print(iris)
setwd("C:/Users/wogns/OneDrive/바탕 화면/Data_study/R스크립트")
a <- matrix(1:12, nrow=3, ncol=4)
a
a <- matrix(1:12, nrow=3, ncol=3)
a
colnames(a)<-c('a','b','c','d')
a <- matrix(1:12, nrow=3, ncol=4, byrow=T) # nrow나 ncol 중 하난 있어야 함.
# 만약 요소개수랑 row x col이 맞지 않으면 잘려서 or 반복되어 나오면서 warning
# 행우선 출력 byrow=T
a
colnames(a)<-c('a','b','c','d')
rownames(a)<-c('kim','lee','park')
colnames(a)<-c('a','b','c','d')
rownames(a)<-c('kim','lee','park')
a
a <- matrix(1:13, nrow=3, byrow=T)
a
a <-c(1:5)
b <-c(6:10)
test1<-cbind(a,b)
test2<-rbind(a,b)
a
b
test1
test2
a <-c(1:5)
b <-c(6:10)
a
b
a1 <-c(1:5)
b1 <-c(6:10)
a1
b1
mat1<-matrix(1:9, nrow = 3)
mat2<-matrix(c(10,20,30,40,50,60,70,80,90), nrow = 3)
mat1+10
mat1+mat2
mat1<-matrix(1:9, nrow = 3)
mat2<-matrix(c(10,20,30,40,50,60,70,80,90,100), nrow = 3)
mat1+10
mat1+mat2
a <- matrix(1:12, nrow=3, ncol=4, byrow=T)
colnames(a)<-c('a','b','c')
rownames(a)<-c('kim','lee','park')
a
colnames(a)<-c('a','b','c','d','e') # 크
